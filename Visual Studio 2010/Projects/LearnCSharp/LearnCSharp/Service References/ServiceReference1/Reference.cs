//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LearnCSharp.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceEmployee")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeparmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeparmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeparmentId {
            get {
                return this.DeparmentIdField;
            }
            set {
                if ((this.DeparmentIdField.Equals(value) != true)) {
                    this.DeparmentIdField = value;
                    this.RaisePropertyChanged("DeparmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeparmentName {
            get {
                return this.DeparmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeparmentNameField, value) != true)) {
                    this.DeparmentNameField = value;
                    this.RaisePropertyChanged("DeparmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeAddress {
            get {
                return this.EmployeeAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeAddressField, value) != true)) {
                    this.EmployeeAddressField = value;
                    this.RaisePropertyChanged("EmployeeAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeCode {
            get {
                return this.EmployeeCodeField;
            }
            set {
                if ((this.EmployeeCodeField.Equals(value) != true)) {
                    this.EmployeeCodeField = value;
                    this.RaisePropertyChanged("EmployeeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeId {
            get {
                return this.EmployeeIdField;
            }
            set {
                if ((this.EmployeeIdField.Equals(value) != true)) {
                    this.EmployeeIdField = value;
                    this.RaisePropertyChanged("EmployeeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeName {
            get {
                return this.EmployeeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeNameField, value) != true)) {
                    this.EmployeeNameField = value;
                    this.RaisePropertyChanged("EmployeeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IEmployee", CallbackContract=typeof(LearnCSharp.ServiceReference1.IEmployeeCallback))]
    public interface IEmployee {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployee/InsertEmployee", ReplyAction="http://tempuri.org/IEmployee/InsertEmployeeResponse")]
        void InsertEmployee(LearnCSharp.ServiceReference1.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployee/GetEmployees", ReplyAction="http://tempuri.org/IEmployee/GetEmployeesResponse")]
        LearnCSharp.ServiceReference1.Employee[] GetEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployee/UpdateEmployee", ReplyAction="http://tempuri.org/IEmployee/UpdateEmployeeResponse")]
        void UpdateEmployee(LearnCSharp.ServiceReference1.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployee/DeleteEmployee", ReplyAction="http://tempuri.org/IEmployee/DeleteEmployeeResponse")]
        void DeleteEmployee(int empId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployee/GetValue", ReplyAction="http://tempuri.org/IEmployee/GetValueResponse")]
        int GetValue();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEmployee/FireAndTrack")]
        void FireAndTrack();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeeCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEmployee/CallingClient")]
        void CallingClient();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeeChannel : LearnCSharp.ServiceReference1.IEmployee, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeClient : System.ServiceModel.DuplexClientBase<LearnCSharp.ServiceReference1.IEmployee>, LearnCSharp.ServiceReference1.IEmployee {
        
        public EmployeeClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public EmployeeClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public EmployeeClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void InsertEmployee(LearnCSharp.ServiceReference1.Employee emp) {
            base.Channel.InsertEmployee(emp);
        }
        
        public LearnCSharp.ServiceReference1.Employee[] GetEmployees() {
            return base.Channel.GetEmployees();
        }
        
        public void UpdateEmployee(LearnCSharp.ServiceReference1.Employee emp) {
            base.Channel.UpdateEmployee(emp);
        }
        
        public void DeleteEmployee(int empId) {
            base.Channel.DeleteEmployee(empId);
        }
        
        public int GetValue() {
            return base.Channel.GetValue();
        }
        
        public void FireAndTrack() {
            base.Channel.FireAndTrack();
        }
    }
}
